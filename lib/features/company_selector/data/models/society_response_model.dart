import 'package:myco_flutter/features/company_selector/domain/entites/society_response.dart';

class SocietyModel extends Society {
  SocietyModel({
    super.societyId,
    super.societyName,
    super.societyAddress,
    super.secretaryEmail,
    super.secretaryMobile,
    super.socieatyLogo,
    super.shareAppContent,
    super.socieatyStatus,
    super.subDomain,
    super.isSociety,
    super.apiKey,
    super.isFirebase,
    super.countryId,
    super.stateId,
    super.cityId,
    super.societyType,
    super.stateCountryName,
    super.loginVia,
    super.googleLogin,
  });

  factory SocietyModel.fromJson(Map<String, dynamic> json) => SocietyModel(
        societyId: json['society_id'] as String?,
        societyName: json['society_name'] as String?,
        societyAddress: json['society_address'] as String?,
        secretaryEmail: json['secretary_email'] as String?,
        secretaryMobile: json['secretary_mobile'] as String?,
        socieatyLogo: json['socieaty_logo'] as String?,
        shareAppContent: json['share_app_content'] as String?,
        socieatyStatus: json['socieaty_status'] as String?,
        subDomain: json['sub_domain'] as String?,
        isSociety: json['is_society'] as bool?,
        apiKey: json['api_key'] as String?,
        isFirebase: json['is_firebase'] as bool?,
        countryId: json['country_id'] as String?,
        stateId: json['state_id'] as String?,
        cityId: json['city_id'] as String?,
        societyType: json['society_type'] as String?,
        stateCountryName: json['state_country_name'] as String?,
        loginVia: json['login_via'] as String?,
        googleLogin: json['google_login'] as String?,
      );

  Map<String, dynamic> toJson() => <String, dynamic>{
        'society_id': societyId,
        'society_name': societyName,
        'society_address': societyAddress,
        'secretary_email': secretaryEmail,
        'secretary_mobile': secretaryMobile,
        'socieaty_logo': socieatyLogo,
        'share_app_content': shareAppContent,
        'socieaty_status': socieatyStatus,
        'sub_domain': subDomain,
        'is_society': isSociety,
        'api_key': apiKey,
        'is_firebase': isFirebase,
        'country_id': countryId,
        'state_id': stateId,
        'city_id': cityId,
        'society_type': societyType,
        'state_country_name': stateCountryName,
        'login_via': loginVia,
        'google_login': googleLogin,
      };

  Society toEntity() => Society(
        societyId: societyId,
        societyName: societyName,
        societyAddress: societyAddress,
        secretaryEmail: secretaryEmail,
        secretaryMobile: secretaryMobile,
        socieatyLogo: socieatyLogo,
        shareAppContent: shareAppContent,
        socieatyStatus: socieatyStatus,
        subDomain: subDomain,
        isSociety: isSociety,
        apiKey: apiKey,
        isFirebase: isFirebase,
        countryId: countryId,
        stateId: stateId,
        cityId: cityId,
        societyType: societyType,
        stateCountryName: stateCountryName,
        loginVia: loginVia,
        googleLogin: googleLogin,
      );


      factory SocietyModel.fromEntity(Society society) {
        return SocietyModel(
          societyId: society.societyId,
          societyName: society.societyName,
          societyAddress: society.societyAddress,
          secretaryEmail: society.secretaryEmail,
          secretaryMobile: society.secretaryMobile,
          socieatyLogo: society.socieatyLogo,
          shareAppContent: society.shareAppContent,
          socieatyStatus: society.socieatyStatus,
          subDomain: society.subDomain,
          isSociety: society.isSociety,
          apiKey: society.apiKey,
          isFirebase: society.isFirebase,
          countryId: society.countryId,
          stateId: society.stateId,
          cityId: society.cityId,
          societyType: society.societyType,
          stateCountryName: society.stateCountryName,
          loginVia: society.loginVia,
          googleLogin: society.googleLogin,
        );
      }
}
